{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","visibleGoods","setVisibleGoods","isAlphActive","setIsAlphActive","isLengthActive","setIsLengthActive","isReverseActive","setIsReverseActive","resetButtonVisible","setResetButtonVisible","copyVisibleGoods","className","type","cn","onClick","sort","goods1","goods2","toLowerCase","localeCompare","length","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAwCC,mBAASF,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA4CJ,oBAAS,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA8CN,oBAAS,GAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAAoDR,oBAAS,GAA7D,mBAAOS,EAAP,KAA2BC,EAA3B,KAEMC,EAAgB,YAAOV,GA4C7B,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,YAAaX,IAEfY,QAlDW,WACjBb,EACES,EAAiBK,MACf,SAACC,EAAQC,GAAT,OACED,EAAOE,cAAeC,cAAcF,EAAOC,mBAIjDf,GAAgB,GAChBE,GAAkB,GAClBI,GAAsB,IAmClB,iCAUA,wBACEG,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAaT,IAEfU,QA/Ca,WACnBb,EACES,EAAiBK,MACf,SAACC,EAAQC,GAAT,OAAoBD,EAAOI,OAASH,EAAOG,WAI/CjB,GAAgB,GAChBE,GAAkB,GAClBI,GAAsB,IAiClB,4BAUA,wBACEG,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAaP,IAEfQ,QA7CQ,WACdb,EACES,EAAiBW,WAGnBd,GAAoBD,IAmChB,sBASEE,GAAsBF,IACtB,wBACEM,KAAK,SACLD,UAAU,4BACVG,QA7CI,WACZb,EAAgBJ,GAEhBM,GAAgB,GAChBE,GAAkB,GAClBE,GAAmB,GACnBE,GAAsB,IAoChB,sBAUJ,6BACGT,EAAasB,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCjHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.04f88266.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n\n  const [isAlphActive, setIsAlphActive] = useState(false);\n  const [isLengthActive, setIsLengthActive] = useState(false);\n  const [isReverseActive, setIsReverseActive] = useState(false);\n  const [resetButtonVisible, setResetButtonVisible] = useState(false);\n\n  const copyVisibleGoods = [...visibleGoods];\n\n  const sortByAlph = () => {\n    setVisibleGoods(\n      copyVisibleGoods.sort(\n        (goods1, goods2) => (\n          goods1.toLowerCase()).localeCompare(goods2.toLowerCase()),\n      ),\n    );\n\n    setIsAlphActive(true);\n    setIsLengthActive(false);\n    setResetButtonVisible(true);\n  };\n\n  const sortByLength = () => {\n    setVisibleGoods(\n      copyVisibleGoods.sort(\n        (goods1, goods2) => goods1.length - goods2.length,\n      ),\n    );\n\n    setIsAlphActive(false);\n    setIsLengthActive(true);\n    setResetButtonVisible(true);\n  };\n\n  const reverse = () => {\n    setVisibleGoods(\n      copyVisibleGoods.reverse(),\n    );\n\n    setIsReverseActive(!isReverseActive);\n  };\n\n  const reset = () => {\n    setVisibleGoods(goodsFromServer);\n\n    setIsAlphActive(false);\n    setIsLengthActive(false);\n    setIsReverseActive(false);\n    setResetButtonVisible(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': !isAlphActive,\n          })}\n          onClick={sortByAlph}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': !isLengthActive,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReverseActive,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n        {(resetButtonVisible || isReverseActive) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}